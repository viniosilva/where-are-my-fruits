// Code generated by MockGen. DO NOT EDIT.
// Source: ./server.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockHealthController is a mock of HealthController interface.
type MockHealthController struct {
	ctrl     *gomock.Controller
	recorder *MockHealthControllerMockRecorder
}

// MockHealthControllerMockRecorder is the mock recorder for MockHealthController.
type MockHealthControllerMockRecorder struct {
	mock *MockHealthController
}

// NewMockHealthController creates a new mock instance.
func NewMockHealthController(ctrl *gomock.Controller) *MockHealthController {
	mock := &MockHealthController{ctrl: ctrl}
	mock.recorder = &MockHealthControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthController) EXPECT() *MockHealthControllerMockRecorder {
	return m.recorder
}

// Check mocks base method.
func (m *MockHealthController) Check(ctx *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Check", ctx)
}

// Check indicates an expected call of Check.
func (mr *MockHealthControllerMockRecorder) Check(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Check", reflect.TypeOf((*MockHealthController)(nil).Check), ctx)
}
