// Code generated by MockGen. DO NOT EDIT.
// Source: ./health.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHealthDB is a mock of HealthDB interface.
type MockHealthDB struct {
	ctrl     *gomock.Controller
	recorder *MockHealthDBMockRecorder
}

// MockHealthDBMockRecorder is the mock recorder for MockHealthDB.
type MockHealthDBMockRecorder struct {
	mock *MockHealthDB
}

// NewMockHealthDB creates a new mock instance.
func NewMockHealthDB(ctrl *gomock.Controller) *MockHealthDB {
	mock := &MockHealthDB{ctrl: ctrl}
	mock.recorder = &MockHealthDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthDB) EXPECT() *MockHealthDBMockRecorder {
	return m.recorder
}

// PingContext mocks base method.
func (m *MockHealthDB) PingContext(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingContext", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// PingContext indicates an expected call of PingContext.
func (mr *MockHealthDBMockRecorder) PingContext(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingContext", reflect.TypeOf((*MockHealthDB)(nil).PingContext), ctx)
}
