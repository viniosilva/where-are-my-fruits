// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/healthcheck": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "healthcheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.HealthCheckRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.HealthCheckRes"
                        }
                    }
                }
            }
        },
        "/v1/buckets": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bucket"
                ],
                "summary": "list buckets",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/presenters.BucketsRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bucket"
                ],
                "summary": "create bucket",
                "parameters": [
                    {
                        "description": "Bucket",
                        "name": "bucket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenters.CreateBucketReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenters.BucketRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    }
                }
            }
        },
        "/v1/buckets/{bucketID}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bucket"
                ],
                "summary": "delete bucket",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bucket ID",
                        "name": "bucketID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    }
                }
            }
        },
        "/v1/fruits": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fruit"
                ],
                "summary": "create fruit",
                "parameters": [
                    {
                        "description": "Fruit",
                        "name": "fruit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/presenters.CreateFruitReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/presenters.FruitRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    }
                }
            }
        },
        "/v1/fruits/{fruitID}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fruit"
                ],
                "summary": "delete fruit",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fruit ID",
                        "name": "fruitID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    }
                }
            }
        },
        "/v1/fruits/{fruitID}/buckets": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fruit"
                ],
                "summary": "remove fruit from bucket",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fruit ID",
                        "name": "fruitID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    }
                }
            }
        },
        "/v1/fruits/{fruitID}/buckets/{bucketID}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fruit"
                ],
                "summary": "add fruit on bucket",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Fruit ID",
                        "name": "fruitID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Bucket ID",
                        "name": "bucketID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/presenters.ErrorRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "presenters.BucketDtoRes": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "example": 10
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "A"
                },
                "percent": {
                    "type": "string",
                    "example": "50%"
                },
                "total_fruit": {
                    "type": "integer",
                    "example": 5
                },
                "total_price": {
                    "type": "number",
                    "example": 23.54
                }
            }
        },
        "presenters.BucketRes": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "example": 10
                },
                "created_at": {
                    "type": "string",
                    "example": "2000-12-31 23:59:59"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2000-12-31 23:59:59"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "A"
                }
            }
        },
        "presenters.BucketsRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/presenters.BucketDtoRes"
                    }
                }
            }
        },
        "presenters.CreateBucketReq": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "example": 10
                },
                "name": {
                    "type": "string",
                    "example": "A"
                }
            }
        },
        "presenters.CreateFruitReq": {
            "type": "object",
            "properties": {
                "bucket_id": {
                    "type": "integer",
                    "example": 1
                },
                "expires_in": {
                    "type": "string",
                    "example": "1m"
                },
                "name": {
                    "type": "string",
                    "example": "Orange"
                },
                "price": {
                    "type": "number",
                    "example": 1.99
                }
            }
        },
        "presenters.ErrorRes": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Not Found"
                },
                "message": {
                    "type": "string",
                    "example": "fruit not found"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "invalid field",
                        "invalid value"
                    ]
                }
            }
        },
        "presenters.FruitRes": {
            "type": "object",
            "properties": {
                "bucket_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2000-12-31 23:59:59"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2000-12-31 23:59:59"
                },
                "expires_at": {
                    "type": "string",
                    "example": "1m"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Orange"
                },
                "price": {
                    "type": "number",
                    "example": 1.99
                }
            }
        },
        "presenters.HealthCheckRes": {
            "type": "object",
            "properties": {
                "status": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/presenters.HealthCheckStatus"
                        }
                    ],
                    "example": "down"
                }
            }
        },
        "presenters.HealthCheckStatus": {
            "type": "string",
            "enum": [
                "up",
                "down"
            ],
            "x-enum-varnames": [
                "HealthCheckStatusUp",
                "HealthCheckStatusDown"
            ]
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
